:root {
  /* Variables */
  --app-max-width: 1800px;

  --app-background-color: #242424;
  --light-blue: #90c8ee;
  --blue: #35A2EB;
  --green: #0DB800;
  --red: #B80000;
  --light-grey: #F2F2F2;
  --light-grey2: #F9F9F9;
  --medium-grey: #949494;
  --dark-grey: #4B4B4B;
  --outer-padding: .75em;
  --default-font-size: .85em;
  --small-font-size: calc(var(--h1-font-size) - .8em);
  --h1-font-size: 1.6em;
  --desktop-navbar-width: 18em;
  --default-font: Helvetica, Inter, system-ui, Avenir, Arial, sans-serif;
  --default-color: var(--dark-grey);
  --active-color: var(--blue);
  --light-active-color: var(--light-blue);
  --dark-active-color: var(--blue);

  --amplify-internal-button-focus-box-shadow: {0px 0px 0px 0px} !important;

  background-color: var(--app-background-color);

  font-family: var(--default-font);
  font-weight: 400;
  font-size: var(--default-font-size);
  color: var(--default-color);
  fill: var(--dark-grey);
  
  color-scheme: light dark;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
}

html {
  height: 100%;  
}

body {
  margin: 0px 10px 0px 10px;
  border: 0;
  height: 100vh;
  place-items: center;


  line-height:unset !important; /* turn off amplify setting */
}

h1 {
  font-size: var(--h1-font-size);
  font-weight: 800;
  margin: 0;
  padding: 0;
}

h2 {
  font-size: calc(var(--h1-font-size) - .2em);
  margin: 0;
  padding: 0;
}

h3 {
  font-size: calc(var(--h1-font-size) - .4em);
  font-weight: 400;
  text-transform: uppercase;
  margin: 0;
  padding: 0;
}

h4 {
  display: inherit;
  font-size: calc(var(--h1-font-size) - .6em);
  font-weight: 400;
  font-style: italic;
  margin: 0;
  padding: 0;
}

small {
  font-size: calc(var(--h1-font-size) - .8em);
  display: block; /* allows height to shrink with smaller font size */
}

a {
  font-weight: inherit;
  text-decoration: inherit;
}
a:hover {
  color: var(--blue);
}

.button-el,
.button-el--visual {
  margin: 0;
  border: 0;
  color: inherit;
  background-color: inherit;
  -webkit-transition: all .1s;
  -moz-transition: all .1s;
  -o-transition: all .1s;
  transition: all .1s;
  text-align: inherit;
}
.button-el {
  padding: 0;
}
.button-el:not(.button-el--disabled) {
  cursor: pointer;
}
.button-el--visual {
  padding: .5em 1.5em .5em 1.5em;
  background-color: var(--light-grey);
  border: 1px solid transparent;
}
.button-el--visual:not(.button-el--disabled) {
  cursor: pointer;
  border: 1px solid var(--dark-active-color);
  color: var(--blue) !important;
  fill: var(--blue) !important;
}
.button-el:hover:not(.button-el--disabled):not(.light) {
  color: var(--active-color) !important;
  fill: var(--active-color) !important;
}
.button-el.light:hover:not(.button-el--disabled) {
  color: var(--light-active-color) !important;
  fill: var(--light-active-color) !important;
}
.button-el--visual:hover:not(.button-el--disabled) {
  background-color: var(--dark-active-color);
  color: white !important;
  fill: white !important;
}
.button-el:hover:active:not(.button-el--disabled),
.button-el--visual:hover:active:not(.button-el--disabled) {
  font-weight: 600 !important;
}
.button-el:hover:active:not(.button-el--disabled) svg,
.button-el--visual:hover:active:not(.button-el--disabled) svg {
  transform: scale(1.1);
}
.active {
  color: var(--active-color) !important;
  font-weight: 800 !important;
  fill: var(--active-color) !important;
  cursor: initial !important;
}
.active-clickable {
  color: var(--active-color) !important;
  font-weight: 800 !important;
  fill: var(--active-color) !important;
}
.active-light {
  font-weight: 800 !important;
  cursor: initial !important;
}
.active-light-clickable {
  font-weight: 800 !important;
}
.button-el--disabled {
  color: var(--medium-grey);
  fill: var(--medium-grey);
}

ul {
  padding: 0px;
  margin: 0px;
}

.scrollable {
  overflow-y: scroll;
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.scrollable::-webkit-scrollbar {
  display: none;
}

/* Use nowrap on td elements to force no wrapping of text. */
/* Set width or max-width to have ellipse show when content exceeds width. */
.nowrap {
  white-space: nowrap;
  text-overflow: ellipsis !important;
  overflow: hidden;
}

/* Create content with two lines, with second line de-emphasized */
.two-line {
  display: flex;
  flex-direction: column;
}
.two-line :nth-child(2) {
  color: var(--medium-grey);
}

/* Sometimes browsers (safari) clip a pixel on bottom and/or left (probably rounding error) */
/* so the svg path is 1 pixel larger than the svg encasing it, this ensures the extra pixels are visible */
svg {
  overflow: visible;
}

.de-emphasize {
  color: var(--medium-grey);
  fill: var(--medium-grey);
}

/* Classes used to modify color based on varying criteria.  'color-modifier' prefix is required so other elements can select on it. */
.color-modifier--positive-value-change {
  color: var(--green);
}
.color-modifier--negative-value-change {
  color: var(--red);
}

/* Children should be a SectionHeading and SortSelector */
.sortable-section-heading {
  display: flex;
}
.sortable-section-heading :nth-child(2) {
  margin-left: auto;
}

/* Used to display placeholders while data is loading */
.placeholder {
  width: 100%;
  background-color: var(--light-grey);
  animation: placeholder-glow linear 2s infinite;
}
.placeholder-heading1 {
  min-height: 3em;
}
.placeholder-heading2 {
  min-height: 2em;
}
.placeholder--indented {
  width: 97%;
  margin-left: 3%;
}
@-webkit-keyframes placeholder-glow { 
  0% { background-color:var(--light-grey); }
  50% { background-color:var(--light-grey2); }
  100% { background-color:var(--light-grey); } 
} 
@keyframes placeholder-glow { 
  0% { background-color:var(--light-grey); }
  50% { background-color:var(--light-grey2); }
  100% { background-color:var(--light-grey); } 
}

/* Styling for two columns of content with divider lines */
.content-two-col {
  flex: 1;
  display: grid;
  grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
}
.content-two-col > div:not(:last-child) {
  border-right: 1px solid var(--light-grey);
}

.content-two-col--col {
  padding: var(--outer-padding);
  display: flex;
  flex-direction: column;
  gap: 2em;
}
.content-two-col--col > div:not(:last-child) {
  padding-bottom: 2em;
  border-bottom: 1px solid var(--light-grey);
}


@media (prefers-color-scheme: light) {
  :root {
    color: var(--dark-grey);
    --app-background-color: #ffffff;
  }
}
